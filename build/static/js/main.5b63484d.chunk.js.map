{"version":3,"sources":["registerServiceWorker.js","Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","MeetingsList.js","Meetings.js","Checkin.js","Register.js","AttendeesList.js","Attendees.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Home","user","this","props","className","style","fontSize","fontWeight","href","to","Component","Welcome","userName","logoutUser","onClick","e","Navigation","FormError","theMessage","Login","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","registrationInfo","preventDefault","signInWithEmailAndPassword","navigate","message","onSubmit","htmlFor","required","type","id","placeholder","onChange","MeetingsList","deleteMeeting","whichMeeting","database","ref","userID","remove","myMeetings","meetings","map","item","key","meetingID","role","aria-label","title","meetingName","Meetings","addMeeting","aria-describedby","length","CheckIn","displayName","push","attendeeName","attendeeEmail","star","Register","passOne","passTwo","createUserWithEmailAndPassword","registerUser","AttendeesList","deleteAttendee","whichAttendee","adminUser","toggleStar","undefined","set","admin","myAttendees","attendees","attendeeID","tite","Attendees","searchQuery","allAttendees","displayAttendees","on","snapshot","val","attendeesList","randomAttendee","Math","floor","random","resetQuery","filteredAttendees","filter","toLowerCase","chooseRandom","App","onAuthStateChanged","FBUser","updateProfile","uid","signOut","meetingsList","howManyMeetings","path","Checkin","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5b63484d.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6m6pw33qXaKhtCeVxf1Scuh1lmItk0jI\",\n  authDomain: \"react-spas-b15f8.firebaseapp.com\",\n  databaseURL: \"https://react-spas-b15f8.firebaseio.com\",\n  projectId: \"react-spas-b15f8\",\n  storageBucket: \"react-spas-b15f8.appspot.com\",\n  messagingSenderId: \"946289064956\",\n  appId: \"1:946289064956:web:259ca5ce32a02d085e1079\",\n  measurementId: \"G-XEGNKE8161\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;","import React, {Component} from 'react';\nimport {Link} from \"@reach/router\";\nclass Home extends Component{\n  render(){\n\n    // wheen receiving state from a parent component use {} to store the state in\n    // a varible\n    const {user} = this.props;\n    const biggerLead = {\n      fontSize : 1.5 + 'em',\n      fontWeight : 200\n    };\n    // console.log(user.user);\n    return( \n      <div className=\"container text-center\">\n        <div className=\"row justify-content-center\">\n          \n          {/* Hello {user} */}\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\n              <div className=\"display-4 text-primary mt-3 mb-2\"\n              style = {{\n                fontSize: 2.8 + 'em'\n              }}>\n              Meeting Log\n              </div>\n              <p className=\"lead\" style = {biggerLead}>\n              This simple app creates meetings, allows people to check\n              in, and picks random users to award giveaways. It's a\n              good example of a Single Page Application which includes\n              connection to a database and routing. It's a practical\n              way to learn <a href=\"https://reactjs.org/\">React</a>  { \" \"}\n              with <a href=\"https://firebase.google.com\">Firebase</a>.\n              </p>\n              {/* conditional components for spas */}\n              {user == null && (\n                <>\n                  <Link\n                  to=\"/register\"\n                  className=\"btn btn-outline-primary mr-2\"\n                  >\n                  Register\n                  </Link>\n                  <Link to=\"/login\" className=\"btn btn-outline-primary mr-2\">\n                  Log In\n                  </Link>\n                </>\n\n              )}\n              {/* switch type of expression in java script */}\n              {user && (\n                <Link to=\"/meetings\" className=\"btn btn-primary\">\n                Meetings\n                </Link>\n              )}\n              \n          </div>{' '}\n          {/* columns */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Link} from '@reach/router';\n\nclass Welcome extends Component{\n  render(){\n\n    // wheen receiving state from a parent component use {} to store the state in\n    // a varible\n    const {userName, logoutUser} = this.props;\n    \n    // console.log(user.user);\n    return( \n      <div className = \"text-center mt-4\">\n        <span className = \"text-secondary font-weight-bold pl-1\">\n          Welcome {userName}\n        </span>\n        ,\n        <Link to = \"/login\" className = \"font-weight-bold text-primary pl-1\" \n        onClick = {e => logoutUser(e)}>\n            logout\n        </Link>\n      </div>\n      \n    );\n  }\n}\n\nexport default Welcome;","import React, {Component} from 'react';\nimport {FaUsers} from 'react-icons/fa';\n\nimport {Link} from '@reach/router';\n\n// Link to prevent page refresh and losing state in react\n\nclass Navigation extends Component{\n  \n  render(){\n    const {user, logoutUser} = this.props;\n    return(\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\n        <div className=\"container-fluid\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <FaUsers className=\"mr-1\" /> Meeting Log\n          </Link>\n          <div className=\"navbar-nav ml-auto\">\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/meetings\">\n                meetings\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/login\">\n                log in\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/register\">\n                register\n              </Link>\n            )}\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/login\"\n              onClick = {e => logoutUser(e)}>\n                log out\n              </Link>\n            )}\n          </div>\n        </div>\n      </nav>\n      \n    );\n  }\n}\n\nexport default Navigation;","import React, {Component} from 'react';\n\nclass FormError extends Component{\n  render(){\n    const {theMessage} = this.props;\n    return (\n      <div className =\"col-12 alert alert-danger px-3\">\n        {theMessage}\n      </div>\n    );\n  }\n}\n\nexport default FormError;\n","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport { navigate } from '@reach/router';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    e.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      )\n      .then(() => {\n        navigate('/meetings');\n      })\n      .catch(error => {\n        if (error.message !== null) {\n          this.setState({ errorMessage: error.message });\n        } else {\n          this.setState({ errorMessage: null });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                  <section className=\"form-group\">\n                    {this.state.errorMessage !== null ? (\n                      <FormError\n                        theMessage={this.state.errorMessage}\n                      />\n                    ) : null}\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Log in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport { GoTrashcan, GoListUnordered } from 'react-icons/go';\nimport {FaLink} from 'react-icons/fa';\nimport { navigate } from '@reach/router';\n\nclass MeetingsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.deleteMeeting = this.deleteMeeting.bind(this);\n  }\n\n  deleteMeeting = (e, whichMeeting) => {\n    e.preventDefault();\n    const ref = firebase\n      .database()\n      .ref(`meetings/${this.props.userID}/${whichMeeting}`);\n    ref.remove();\n  };\n\n  render() {\n    const { meetings } = this.props;\n    const myMeetings = meetings.map(item => {\n      return (\n        <div className=\"list-group-item d-flex\" key={item.meetingID}>\n\n          <section\n            className=\"btn-group align-self-center\"\n            role=\"group\"\n            aria-label=\"Meeting Options\"\n          >\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Delete Meeting\"\n              onClick={e => this.deleteMeeting(e, item.meetingID)}\n            >\n              <GoTrashcan />\n            </button>\n          \n\n            <button\n                className=\"btn btn-sm btn-outline-secondary\"\n                title=\"Check In\"\n                onClick={() =>\n                  navigate(\n                    `/checkin/${this.props.userID}/${item.meetingID}`\n                  )\n                }\n              >\n              <FaLink />\n            </button>\n\n            <button\n                className=\"btn btn-sm btn-outline-secondary\"\n                title=\"Attendees List\"\n                onClick={() =>\n                  navigate(\n                    `/attendees/${this.props.userID}/${item.meetingID}`\n                  )\n                }\n              >\n              <GoListUnordered />\n            </button>\n\n          </section>\n          <section className=\"pl-3 text-left align-self-center\">\n            {item.meetingName}\n          </section>\n        </div>\n      );\n    });\n\n    return <div>{myMeetings}</div>;\n  }\n}\n\nexport default MeetingsList;","import React, { Component } from 'react';\nimport MeetingsList from './MeetingsList';\n\nclass Meetings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meetingName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.addMeeting(this.state.meetingName);\n    this.setState({ meetingName: '' });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 text-center\">\n            <h1 className=\"font-weight-light\">Add a Meeting</h1>\n            <div className=\"card bg-light\">\n              <div className=\"card-body text-center\">\n                <form\n                  className=\"formgroup\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"input-group input-group-lg\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"meetingName\"\n                      placeholder=\"Meeting name\"\n                      aria-describedby=\"buttonAdd\"\n                      value={this.state.meetingName}\n                      onChange={this.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-sm btn-info\"\n                        id=\"buttonAdd\"\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-11 col-md-6 text-center\">\n            <div className=\"card border-top-0 rounded-0\">\n              {this.props.meetings && this.props.meetings.length ? (\n                <div className=\"card-body py-2\">\n                  <h4 className=\"card-title font-weight-light m-0\">\n                    Your Meetings\n                  </h4>\n                </div>\n              ) : null}\n\n              {this.props.meetings && (\n                <div className=\"list-group list-group-flush\">\n                  <MeetingsList \n                  userID = {this.props.userID}\n                  meetings={this.props.meetings} \n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Meetings;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport { navigate } from '@reach/router';\n\nclass CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${this.props.userID}/${\n          this.props.meetingID\n        }/attendees`\n      );\n    ref.push({\n      attendeeName: this.state.displayName,\n      attendeeEmail: this.state.email,\n      star: false\n    });\n    navigate(\n      `/attendees/${this.props.userID}/${this.props.meetingID}`\n    );\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"displayName\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"displayName\"\n                      name=\"displayName\"\n                      placeholder=\"Name\"\n                      value={this.state.displayName}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Check in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default CheckIn;","import React, {Component} from 'react';\nimport firebase from './Firebase';\n\nimport FormError from './FormError';\n\nclass Register extends Component{\n\n  constructor (props){\n    super(props);\n    this.state = {\n      displayName : '',\n      email : '',\n      passOne : '',\n      passTwo : '',\n      errorMessage : null\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n    // explanation for [] => changing key\n    // https://medium.com/@bretdoucette/understanding-this-setstate-name-value-a5ef7b4ea2b4\n    this.setState({[itemName] : itemValue}, () => {\n      if(this.state.passOne !== this.state.passTwo){\n        this.setState({errorMessage : ' Passwords do not match'});\n      } else {\n        this.setState({errorMessage: null});\n      }\n    });\n  }\n\n  handleSubmit(e){\n    var registrationInfo ={\n      displayName: this.state.displayName,\n      email: this.state.email,\n      password : this.state.passOne\n    }\n    e.preventDefault();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      )\n      .then(() =>{\n          this.props.registerUser(registrationInfo.displayName)\n      })\n      .catch(error => {\n        if (error.message !== null){\n          this.setState({errorMessage: error.message});\n        }\n        else{\n          this.setState({errorMessage: null});\n        }\n      } );\n  }\n\n\n  render(){\n    \n    // console.log(user.user);\n    return( \n      <form className=\"mt-3\" onSubmit = {this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-8\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Register</h3>\n                  <div className=\"form-row\">\n                    {this.state.errorMessage !== null ? (\n                      <FormError theMessage = {this.state.errorMessage} />\n                    ): null}\n                    <section className=\"col-sm-12 form-group\">\n                      <label\n                        className=\"form-control-label sr-only\"\n                        htmlFor=\"displayName\"\n                      >\n                        Display Name\n                      </label>\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"displayName\"\n                        placeholder=\"Display Name\"\n                        name=\"displayName\"\n                        required\n                        value={this.state.displayName}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                  </div>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email Address\"\n                      required\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-row\">\n                    <section className=\"col-sm-6 form-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"passOne\"\n                        placeholder=\"Password\"\n                        value={this.state.passOne}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                    <section className=\"col-sm-6 form-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        required\n                        name=\"passTwo\"\n                        placeholder=\"Repeat Password\"\n                        value={this.state.passTwo}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                  </div>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Register\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      \n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport { GoTrashcan, GoStar, GoMail } from 'react-icons/go';\n\nclass AttendeesList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteAttendee = this.deleteAttendee.bind(this);\n  }\n\n  deleteAttendee = (e, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}`\n      );\n    ref.remove();\n  };\n\n  toggleStar = (e, star, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}/star`\n      );\n\n    if (star === undefined) {\n      ref.set(true);\n    } else {\n      ref.set(!star);\n    }\n  };\n\n  render() {\n    const admin =\n      this.props.adminUser === this.props.userID ? true : false;\n    const attendees = this.props.attendees;\n    const myAttendees = attendees.map(item => {\n      return (\n        <div\n          className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\n          key={item.attendeeID}\n        >\n          <div className=\"card \">\n            <div\n              className={\n                'card-body px-3 py-2 d-flex align-items-center ' +\n                (admin ? '' : 'justify-content-center')\n              }\n            >\n\n              \n              {admin && (\n                <div className=\"btn-group pr-2\">\n                  \n                  <button\n                    className={\n                      'btn btn-sm ' +\n                      (item.star\n                        ? 'btn-info'\n                        : 'btn-outline-secondary')\n                    }\n                    tite=\"Give user a star\"\n                    onClick={e =>\n                      this.toggleStar(\n                        e,\n                        item.star,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoStar />\n                  </button>\n\n                  <a\n                    href={`mailto:${item.attendeeEmail}`}\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    title=\"Mail Attendee\"\n                  >\n                    <GoMail />\n                  </a>\n\n                  <button\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    tite=\"Delete Attendee\"\n                    onClick={e =>\n                      this.deleteAttendee(\n                        e,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoTrashcan />\n                  </button>\n                </div>\n              )}\n                \n              <div>{item.attendeeName}</div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"row justify-content-center\">{myAttendees}</div>\n    );\n  }\n}\n\nexport default AttendeesList;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport AttendeesList from './AttendeesList';\nimport { FaUndo, FaRandom } from 'react-icons/fa';\n\nclass Attendees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: '',\n      allAttendees: [],\n      displayAttendees: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${this.props.userID}/${\n          this.props.meetingID\n        }/attendees`\n      );\n\n    ref.on('value', snapshot => {\n      let attendees = snapshot.val();\n      let attendeesList = [];\n      for (let item in attendees) {\n        attendeesList.push({\n          attendeeID: item,\n          attendeeName: attendees[item].attendeeName,\n          attendeeEmail: attendees[item].attendeeEmail,\n          star: attendees[item].star\n        });\n      }\n      this.setState({\n        allAttendees: attendeesList,\n        displayAttendees: attendeesList\n      });\n    });\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  resetQuery() {\n    this.setState({\n      displayAttendees: this.state.allAttendees,\n      searchQuery: ''\n    });\n  }\n\n  chooseRandom() {\n    const randomAttendee = Math.floor(\n      Math.random() * this.state.allAttendees.length\n    );\n    this.resetQuery();\n    this.setState({\n      displayAttendees: [this.state.allAttendees[randomAttendee]]\n    });\n  }\n\n  render() {\n\n    const dataFilter = item =>\n      item.attendeeName\n        .toLowerCase()\n        .match(this.state.searchQuery.toLowerCase()) && true;\n    const filteredAttendees = this.state.displayAttendees.filter(\n      dataFilter\n    );\n\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <h1 className=\"font-weight-light text-center\">\n              Attendees\n            </h1>\n        \n            <div className=\"card bg-light mb-4\">\n              <div className=\"card-body text-center\">\n                <div className=\"input-group input-group-lg\">\n                  <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    value={this.state.searchQuery}\n                    placeholder=\"Search Attendees\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      className=\"btn btn-sm btn-outline-info \"\n                      title=\"Pick a random attendee\"\n                      onClick={() => this.chooseRandom()}\n                    >\n                      <FaRandom />\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-outline-info \"\n                      title=\"Reset Search\"\n                      onClick={() => this.resetQuery()}\n                    >\n                      <FaUndo />\n                    </button>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <AttendeesList \n          userID = {this.props.userID}\n          meetingID = {this.props.meetingID}\n          adminUser = {this.props.adminUser}\n          attendees = {filteredAttendees}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Attendees;\n","// Import React\nimport React, { Component } from 'react';\nimport {Router, navigate} from \"@reach/router\";\nimport firebase from './Firebase';\n\nimport Home from './Home';\nimport Welcome from \"./Welcome\";\nimport Navigation from \"./Navigation\";\nimport Login from \"./Login\";\nimport Meetings from \"./Meetings\";\nimport Checkin from \"./Checkin\";\nimport Register from \"./Register\";\nimport Attendees from \"./Attendees\";\nimport { isNull } from 'lodash';\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      user : null,\n      displayName: null,\n      userID: null\n    }\n    // this.registerUser = this.registerUser.bind(this);\n  }\n\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName : userName\n      })\n      .then(()=> {\n          this.setState({\n            user: FBUser,\n            displayName: FBUser.displayName,\n            userID: FBUser.uid\n\n          });\n          console.log(this.state.user);\n          navigate('/meetings');\n      })\n    })\n  }\n\n  logoutUser = e => {\n    e.preventDefault();\n    this.setState({\n      displayName: null,\n      userID: null,\n      user: null\n    });\n\n    firebase.auth().signOut()\n    .then(()=> {\n      navigate('/login');\n    })\n  }\n\n  addMeeting = meetingName => {\n    // ${} i think this is value of expression\n    // https://developers.google.com/web/updates/2015/01/ES6-Template-Strings\n    // https://stackoverflow.com/questions/44788755/firebase-child-failed-first-argument-was-an-invalid-path\n   \n    const ref = firebase.database().ref(`meetings/${this.state.user.uid}`);\n    ref.push({meetingName: meetingName});\n  }\n\n\n\n  // should see what this thing does component did mount\n  componentDidMount(){\n\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if(FBUser){\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n        const meetingRef = firebase.database().ref('meetings/' + FBUser.uid);\n        meetingRef.on('value', snapshot => {\n          let meetings = snapshot.val();\n          let meetingsList = [];\n\n          for (let item in meetings) {\n            meetingsList.push({\n              meetingID: item,\n              meetingName: meetings[item].meetingName\n            });\n          }\n          this.setState({\n            meetings: meetingsList,\n            howManyMeetings: meetingsList.length\n          });\n        });\n      }\n      else{\n        this.setState({user: null});\n      }\n      }\n    )\n\n    // const ref = firebase.database().ref('User');\n\n    // ref.on(\"value\", snapshot =>{\n    //   let FBUser = snapshot.val();\n    //   console.log(FBUser);\n    //   this.setState({user: FBUser});\n    // });\n    \n  }\n\n  render() {\n    return (\n      <>\n        <Navigation user ={this.state.user} logoutUser = {this.logoutUser}/>\n        {this.state.user && (<Welcome \n        userName = {this.state.displayName}\n        logoutUser = {this.logoutUser}/>)}\n        \n        <Router>\n          <Home path = \"/\" user = {this.state.user}/>\n          <Login path = \"/login\" />\n          <Meetings \n          path = \"/meetings\" \n          meetings = {this.state.meetings}\n          addMeeting = {this.addMeeting}\n          userID = {this.state.userID}/>\n          <Checkin path = \"/checkin/:userID/:meetingID\"/>\n          <Attendees \n          path = \"/attendees/:userID/:meetingID\"\n          adminUser = {this.state.userID}\n          />\n          <Register path = \"/register\" registerUser = {this.registerUser} />\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}